// import { collection, getDocs, addDoc, query, orderBy, limit, startAfter, DocumentData, Firestore, CollectionReference } from "firebase/firestore";

// class FirestorePaginator<T> {
//   private colRef: CollectionReference<T>;
//   private lastVisible: DocumentData | null = null;
//   private pageSize: number;

//   constructor(db: Firestore, collectionName: string, pageSize: number = 10) {
//     this.colRef = collection(db, collectionName) as CollectionReference<T>;
//     this.pageSize = pageSize;
//   }

//   // Fetch the initial or next set of documents
//   async fetchNext(): Promise<T[]> {
//     try {
//       const q = this.lastVisible
//         ? query(this.colRef, orderBy("createdAt", "desc"), startAfter(this.lastVisible), limit(this.pageSize))
//         : query(this.colRef, orderBy("createdAt", "desc"), limit(this.pageSize));

//       const snapshot = await getDocs(q);

//       if (!snapshot.empty) {
//         this.lastVisible = snapshot.docs[snapshot.docs.length - 1];
//       }

//       return snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })) as T[];
//     } catch (error: any) {
//       console.error("Error fetching documents:", error.message);
//       throw new Error(error.message);
//     }
//   }

//   // Add a document to the collection
//   async addDocument(doc: T): Promise<void> {
//     try {
//       await addDoc(this.colRef, doc);
//     } catch (error: any) {
//       console.error("Error adding document:", error.message);
//       throw new Error(error.message);
//     }
//   }
// }

// export default FirestorePaginator;

// import FirestorePaginator from './FirestorePaginator';
// import { db } from "./firebase";
// import { Task } from "../component/IndexPage/Task";

// const tasksPaginator = new FirestorePaginator<Task>(db, "tasks");

// // Fetch next set of tasks
// const fetchNextTasks = async () => {
//   const newTasks = await tasksPaginator.fetchNext();
//   // Handle newTasks...
// };

// import FirestorePaginator from './FirestorePaginator';
// import { db } from "./firebase";
// import { Articles } from "../component/ArticlesStructure";

// const articlesPaginator = new FirestorePaginator<Articles>(db, "articles");

// // Fetch next set of articles
// const fetchNextArticles = async () => {
//   const newArticles = await articlesPaginator.fetchNext();
//   // Handle newArticles...
// };
